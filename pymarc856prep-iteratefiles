from pymarc import MARCReader
from pymarc import Record, Field 
import os

# This is the directory we'll be operating on
thisdir = '.'

#this script preps ebook files for Evergreen by removing the GMD and extraneous links, adding a holdings code 
##and editing the text for the link
#you will need to specify input and output file names
#you will need to specify the holdings code for the 856$9 and link text for 856$z below

shortcode = 'WYO'
linktext = 'Click to access digital title. Please have your valid Wyomissing Public Library card handy.'


def operate(filename):
	"""OPERATE - modify a marc file and output it to a new marc file
	operate(filename)
Opens a marc file, modifies a series of data entries, and saves the modified entries
to a new file with a modified filename.  For example, if the file name is 'myfile.mrc'
the output would be 'myfile.out.mrc'.
"""
	# First, build the output file name
	fileparts = filename.split('.')
	fileparts.insert(len(fileparts)-1,'out')
	outfile = fileparts.join('.')

    with open(filename, 'rb') as data:
        with open(outfile, 'wb') as out:
            reader = MARCReader(data)
            for record in reader:
                # In this portion of the code, you have retrieved a specific record
                # You can modify the record object as much as you want and it will
                # be written immediately to the output file at the bottom of this
                # for loop.
                
                # Here, we retrieve a list of all 926 fields, loop over them, and
                # remove the 'f' subfield from each.
              
                # delete 245 $h aka GMD
                fields = record.get_fields('245')
                for field in fields:
                    field.delete_subfield('h')
                    
                # Insert more modifications here...
                
                #remove 856s with $3 - excerpts, samples, etc
                fields = record.get_fields('856')
                for field in fields:
                    if field.get_subfields('3'):
                        record.remove_field(field)
                            
                    
                #replace 856 $z
                fields = record.get_fields('856')
                for field in fields:
                    field.delete_subfield('z')            
                    field.add_subfield('z', linktext)
                
                #add 856$9WYO
                fields = record.get_fields('856')
                for field in fields:
                    field.add_subfield('9', shortcode)

                out.write(record.as_marc())


if __name__ == '__main__':
    # Get a list of the directory contents
    # contents is now a list of string file and directory names
    contents = os.listdir(thisdir)

    # loop over the filenames
    # thisfile will be each file name string - one at a time
    for thisfile in contents:
        # Build full path - this isn't necessary if it's the current directory
        # fullfile = os.path.join(thisdir, thisfile)
        fullfile = thisfile

        # Test whether this is a file we want to operate on
        if os.path.isfile(fullfile) and thisfile.endswith('.mrc') and not thisfile.endswith('out.mrc'):
            operate(fullfile)
            
